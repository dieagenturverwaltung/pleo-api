/*
App Marketplace API

API for Pleo App Marketplace

API version: 29.4.0
Contact: partner-ecosystem-team@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package marketplace

import (
	"encoding/json"
)

// UpdateInstallationRequest struct for UpdateInstallationRequest
type UpdateInstallationRequest struct {
	// A means to store any metadata about the installation. Could for example be settings for the application
	Metadata map[string]map[string]interface{} `json:"metadata,omitempty"`
	// The status of the installation. If it is ACTIVATED, it means that the application is installed and operational.
	Status string `json:"status"`
}

// NewUpdateInstallationRequest instantiates a new UpdateInstallationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInstallationRequest(status string) *UpdateInstallationRequest {
	this := UpdateInstallationRequest{}
	this.Status = status
	return &this
}

// NewUpdateInstallationRequestWithDefaults instantiates a new UpdateInstallationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInstallationRequestWithDefaults() *UpdateInstallationRequest {
	this := UpdateInstallationRequest{}
	var status string = "ACTIVATED"
	this.Status = status
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *UpdateInstallationRequest) GetMetadata() map[string]map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInstallationRequest) GetMetadataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *UpdateInstallationRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]map[string]interface{} and assigns it to the Metadata field.
func (o *UpdateInstallationRequest) SetMetadata(v map[string]map[string]interface{}) {
	o.Metadata = v
}

// GetStatus returns the Status field value
func (o *UpdateInstallationRequest) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *UpdateInstallationRequest) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *UpdateInstallationRequest) SetStatus(v string) {
	o.Status = v
}

func (o UpdateInstallationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateInstallationRequest struct {
	value *UpdateInstallationRequest
	isSet bool
}

func (v NullableUpdateInstallationRequest) Get() *UpdateInstallationRequest {
	return v.value
}

func (v *NullableUpdateInstallationRequest) Set(val *UpdateInstallationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInstallationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInstallationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInstallationRequest(val *UpdateInstallationRequest) *NullableUpdateInstallationRequest {
	return &NullableUpdateInstallationRequest{value: val, isSet: true}
}

func (v NullableUpdateInstallationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInstallationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
