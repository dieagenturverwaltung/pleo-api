/*
Tax Code API

Tax Codes OpenAPI definitions

API version: 42.14.0
Contact: team-expense-core@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tax_codes

import (
	"encoding/json"
)

// DataResponseTaxCodeModel struct for DataResponseTaxCodeModel
type DataResponseTaxCodeModel struct {
	Data TaxCodeModel `json:"data"`
}

// NewDataResponseTaxCodeModel instantiates a new DataResponseTaxCodeModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataResponseTaxCodeModel(data TaxCodeModel) *DataResponseTaxCodeModel {
	this := DataResponseTaxCodeModel{}
	this.Data = data
	return &this
}

// NewDataResponseTaxCodeModelWithDefaults instantiates a new DataResponseTaxCodeModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataResponseTaxCodeModelWithDefaults() *DataResponseTaxCodeModel {
	this := DataResponseTaxCodeModel{}
	return &this
}

// GetData returns the Data field value
func (o *DataResponseTaxCodeModel) GetData() TaxCodeModel {
	if o == nil {
		var ret TaxCodeModel
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *DataResponseTaxCodeModel) GetDataOk() (*TaxCodeModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *DataResponseTaxCodeModel) SetData(v TaxCodeModel) {
	o.Data = v
}

func (o DataResponseTaxCodeModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableDataResponseTaxCodeModel struct {
	value *DataResponseTaxCodeModel
	isSet bool
}

func (v NullableDataResponseTaxCodeModel) Get() *DataResponseTaxCodeModel {
	return v.value
}

func (v *NullableDataResponseTaxCodeModel) Set(val *DataResponseTaxCodeModel) {
	v.value = val
	v.isSet = true
}

func (v NullableDataResponseTaxCodeModel) IsSet() bool {
	return v.isSet
}

func (v *NullableDataResponseTaxCodeModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataResponseTaxCodeModel(val *DataResponseTaxCodeModel) *NullableDataResponseTaxCodeModel {
	return &NullableDataResponseTaxCodeModel{value: val, isSet: true}
}

func (v NullableDataResponseTaxCodeModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataResponseTaxCodeModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
