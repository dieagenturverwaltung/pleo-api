/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// ExportItemMetadata Additional metadata applicable to this accounting entry
type ExportItemMetadata struct {
	// Used to represent attendance involvement or participants at the time of the spend. E.g. if an employee took clients to dinner, this would be used to capture who was present at the dinner.
	Attendees          []*string                  `json:"attendees,omitempty"`
	InvoiceInformation NullableInvoiceInformation `json:"invoiceInformation,omitempty"`
	// This is an identifier used to reconcile between Pleo and the accounting system. Also known in Pleo as the book ID.
	ReconciliationId string `json:"reconciliationId"`
}

// NewExportItemMetadata instantiates a new ExportItemMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportItemMetadata(reconciliationId string) *ExportItemMetadata {
	this := ExportItemMetadata{}
	this.ReconciliationId = reconciliationId
	return &this
}

// NewExportItemMetadataWithDefaults instantiates a new ExportItemMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportItemMetadataWithDefaults() *ExportItemMetadata {
	this := ExportItemMetadata{}
	return &this
}

// GetAttendees returns the Attendees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportItemMetadata) GetAttendees() []*string {
	if o == nil {
		var ret []*string
		return ret
	}
	return o.Attendees
}

// GetAttendeesOk returns a tuple with the Attendees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportItemMetadata) GetAttendeesOk() ([]*string, bool) {
	if o == nil || o.Attendees == nil {
		return nil, false
	}
	return o.Attendees, true
}

// HasAttendees returns a boolean if a field has been set.
func (o *ExportItemMetadata) HasAttendees() bool {
	if o != nil && o.Attendees != nil {
		return true
	}

	return false
}

// SetAttendees gets a reference to the given []*string and assigns it to the Attendees field.
func (o *ExportItemMetadata) SetAttendees(v []*string) {
	o.Attendees = v
}

// GetInvoiceInformation returns the InvoiceInformation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportItemMetadata) GetInvoiceInformation() InvoiceInformation {
	if o == nil || o.InvoiceInformation.Get() == nil {
		var ret InvoiceInformation
		return ret
	}
	return *o.InvoiceInformation.Get()
}

// GetInvoiceInformationOk returns a tuple with the InvoiceInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportItemMetadata) GetInvoiceInformationOk() (*InvoiceInformation, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvoiceInformation.Get(), o.InvoiceInformation.IsSet()
}

// HasInvoiceInformation returns a boolean if a field has been set.
func (o *ExportItemMetadata) HasInvoiceInformation() bool {
	if o != nil && o.InvoiceInformation.IsSet() {
		return true
	}

	return false
}

// SetInvoiceInformation gets a reference to the given NullableInvoiceInformation and assigns it to the InvoiceInformation field.
func (o *ExportItemMetadata) SetInvoiceInformation(v InvoiceInformation) {
	o.InvoiceInformation.Set(&v)
}

// SetInvoiceInformationNil sets the value for InvoiceInformation to be an explicit nil
func (o *ExportItemMetadata) SetInvoiceInformationNil() {
	o.InvoiceInformation.Set(nil)
}

// UnsetInvoiceInformation ensures that no value is present for InvoiceInformation, not even an explicit nil
func (o *ExportItemMetadata) UnsetInvoiceInformation() {
	o.InvoiceInformation.Unset()
}

// GetReconciliationId returns the ReconciliationId field value
func (o *ExportItemMetadata) GetReconciliationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReconciliationId
}

// GetReconciliationIdOk returns a tuple with the ReconciliationId field value
// and a boolean to check if the value has been set.
func (o *ExportItemMetadata) GetReconciliationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReconciliationId, true
}

// SetReconciliationId sets field value
func (o *ExportItemMetadata) SetReconciliationId(v string) {
	o.ReconciliationId = v
}

func (o ExportItemMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Attendees != nil {
		toSerialize["attendees"] = o.Attendees
	}
	if o.InvoiceInformation.IsSet() {
		toSerialize["invoiceInformation"] = o.InvoiceInformation.Get()
	}
	if true {
		toSerialize["reconciliationId"] = o.ReconciliationId
	}
	return json.Marshal(toSerialize)
}

type NullableExportItemMetadata struct {
	value *ExportItemMetadata
	isSet bool
}

func (v NullableExportItemMetadata) Get() *ExportItemMetadata {
	return v.value
}

func (v *NullableExportItemMetadata) Set(val *ExportItemMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExportItemMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExportItemMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportItemMetadata(val *ExportItemMetadata) *NullableExportItemMetadata {
	return &NullableExportItemMetadata{value: val, isSet: true}
}

func (v NullableExportItemMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportItemMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
