/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// SupplierBankAccount Bank account information of the supplier
type SupplierBankAccount struct {
	// Bank account number
	AccountNumber NullableString `json:"accountNumber,omitempty"`
	// Bank code
	BankCode NullableString `json:"bankCode,omitempty"`
	// Name of the bank
	BankName string `json:"bankName"`
	// Branch information
	Bic NullableString `json:"bic,omitempty"`
	// Country the bank is located in. This would be the 2 letter country code
	Country string `json:"country"`
	// Unique international bank account number
	Iban NullableString `json:"iban,omitempty"`
}

// NewSupplierBankAccount instantiates a new SupplierBankAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplierBankAccount(bankName string, country string) *SupplierBankAccount {
	this := SupplierBankAccount{}
	this.BankName = bankName
	this.Country = country
	return &this
}

// NewSupplierBankAccountWithDefaults instantiates a new SupplierBankAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplierBankAccountWithDefaults() *SupplierBankAccount {
	this := SupplierBankAccount{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupplierBankAccount) GetAccountNumber() string {
	if o == nil || o.AccountNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber.Get()
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupplierBankAccount) GetAccountNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountNumber.Get(), o.AccountNumber.IsSet()
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *SupplierBankAccount) HasAccountNumber() bool {
	if o != nil && o.AccountNumber.IsSet() {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given NullableString and assigns it to the AccountNumber field.
func (o *SupplierBankAccount) SetAccountNumber(v string) {
	o.AccountNumber.Set(&v)
}

// SetAccountNumberNil sets the value for AccountNumber to be an explicit nil
func (o *SupplierBankAccount) SetAccountNumberNil() {
	o.AccountNumber.Set(nil)
}

// UnsetAccountNumber ensures that no value is present for AccountNumber, not even an explicit nil
func (o *SupplierBankAccount) UnsetAccountNumber() {
	o.AccountNumber.Unset()
}

// GetBankCode returns the BankCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupplierBankAccount) GetBankCode() string {
	if o == nil || o.BankCode.Get() == nil {
		var ret string
		return ret
	}
	return *o.BankCode.Get()
}

// GetBankCodeOk returns a tuple with the BankCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupplierBankAccount) GetBankCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BankCode.Get(), o.BankCode.IsSet()
}

// HasBankCode returns a boolean if a field has been set.
func (o *SupplierBankAccount) HasBankCode() bool {
	if o != nil && o.BankCode.IsSet() {
		return true
	}

	return false
}

// SetBankCode gets a reference to the given NullableString and assigns it to the BankCode field.
func (o *SupplierBankAccount) SetBankCode(v string) {
	o.BankCode.Set(&v)
}

// SetBankCodeNil sets the value for BankCode to be an explicit nil
func (o *SupplierBankAccount) SetBankCodeNil() {
	o.BankCode.Set(nil)
}

// UnsetBankCode ensures that no value is present for BankCode, not even an explicit nil
func (o *SupplierBankAccount) UnsetBankCode() {
	o.BankCode.Unset()
}

// GetBankName returns the BankName field value
func (o *SupplierBankAccount) GetBankName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value
// and a boolean to check if the value has been set.
func (o *SupplierBankAccount) GetBankNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankName, true
}

// SetBankName sets field value
func (o *SupplierBankAccount) SetBankName(v string) {
	o.BankName = v
}

// GetBic returns the Bic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupplierBankAccount) GetBic() string {
	if o == nil || o.Bic.Get() == nil {
		var ret string
		return ret
	}
	return *o.Bic.Get()
}

// GetBicOk returns a tuple with the Bic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupplierBankAccount) GetBicOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Bic.Get(), o.Bic.IsSet()
}

// HasBic returns a boolean if a field has been set.
func (o *SupplierBankAccount) HasBic() bool {
	if o != nil && o.Bic.IsSet() {
		return true
	}

	return false
}

// SetBic gets a reference to the given NullableString and assigns it to the Bic field.
func (o *SupplierBankAccount) SetBic(v string) {
	o.Bic.Set(&v)
}

// SetBicNil sets the value for Bic to be an explicit nil
func (o *SupplierBankAccount) SetBicNil() {
	o.Bic.Set(nil)
}

// UnsetBic ensures that no value is present for Bic, not even an explicit nil
func (o *SupplierBankAccount) UnsetBic() {
	o.Bic.Unset()
}

// GetCountry returns the Country field value
func (o *SupplierBankAccount) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *SupplierBankAccount) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *SupplierBankAccount) SetCountry(v string) {
	o.Country = v
}

// GetIban returns the Iban field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SupplierBankAccount) GetIban() string {
	if o == nil || o.Iban.Get() == nil {
		var ret string
		return ret
	}
	return *o.Iban.Get()
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SupplierBankAccount) GetIbanOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Iban.Get(), o.Iban.IsSet()
}

// HasIban returns a boolean if a field has been set.
func (o *SupplierBankAccount) HasIban() bool {
	if o != nil && o.Iban.IsSet() {
		return true
	}

	return false
}

// SetIban gets a reference to the given NullableString and assigns it to the Iban field.
func (o *SupplierBankAccount) SetIban(v string) {
	o.Iban.Set(&v)
}

// SetIbanNil sets the value for Iban to be an explicit nil
func (o *SupplierBankAccount) SetIbanNil() {
	o.Iban.Set(nil)
}

// UnsetIban ensures that no value is present for Iban, not even an explicit nil
func (o *SupplierBankAccount) UnsetIban() {
	o.Iban.Unset()
}

func (o SupplierBankAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountNumber.IsSet() {
		toSerialize["accountNumber"] = o.AccountNumber.Get()
	}
	if o.BankCode.IsSet() {
		toSerialize["bankCode"] = o.BankCode.Get()
	}
	if true {
		toSerialize["bankName"] = o.BankName
	}
	if o.Bic.IsSet() {
		toSerialize["bic"] = o.Bic.Get()
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if o.Iban.IsSet() {
		toSerialize["iban"] = o.Iban.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableSupplierBankAccount struct {
	value *SupplierBankAccount
	isSet bool
}

func (v NullableSupplierBankAccount) Get() *SupplierBankAccount {
	return v.value
}

func (v *NullableSupplierBankAccount) Set(val *SupplierBankAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplierBankAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplierBankAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplierBankAccount(val *SupplierBankAccount) *NullableSupplierBankAccount {
	return &NullableSupplierBankAccount{value: val, isSet: true}
}

func (v NullableSupplierBankAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplierBankAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
