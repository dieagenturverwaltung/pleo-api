/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// DataResponseExportJob struct for DataResponseExportJob
type DataResponseExportJob struct {
	Data ExportJob `json:"data"`
}

// NewDataResponseExportJob instantiates a new DataResponseExportJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataResponseExportJob(data ExportJob) *DataResponseExportJob {
	this := DataResponseExportJob{}
	this.Data = data
	return &this
}

// NewDataResponseExportJobWithDefaults instantiates a new DataResponseExportJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataResponseExportJobWithDefaults() *DataResponseExportJob {
	this := DataResponseExportJob{}
	return &this
}

// GetData returns the Data field value
func (o *DataResponseExportJob) GetData() ExportJob {
	if o == nil {
		var ret ExportJob
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *DataResponseExportJob) GetDataOk() (*ExportJob, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *DataResponseExportJob) SetData(v ExportJob) {
	o.Data = v
}

func (o DataResponseExportJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableDataResponseExportJob struct {
	value *DataResponseExportJob
	isSet bool
}

func (v NullableDataResponseExportJob) Get() *DataResponseExportJob {
	return v.value
}

func (v *NullableDataResponseExportJob) Set(val *DataResponseExportJob) {
	v.value = val
	v.isSet = true
}

func (v NullableDataResponseExportJob) IsSet() bool {
	return v.isSet
}

func (v *NullableDataResponseExportJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataResponseExportJob(val *DataResponseExportJob) *NullableDataResponseExportJob {
	return &NullableDataResponseExportJob{value: val, isSet: true}
}

func (v NullableDataResponseExportJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataResponseExportJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
