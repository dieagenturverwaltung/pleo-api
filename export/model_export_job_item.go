/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
	"time"
)

// ExportJobItem struct for ExportJobItem
type ExportJobItem struct {
	// The accounting entry identifier being exported
	AccountingEntryId string `json:"accountingEntryId"`
	// The export job identifier for which this item belongs to
	ExportJobId string `json:"exportJobId"`
	// Date and time the item was exported
	ExportedAt NullableTime `json:"exportedAt,omitempty"`
	// This is an external identifier of the corresponding accounting entry in the accounting system after export
	ExternalId NullableString `json:"externalId,omitempty"`
	// This is the external URL pointing to the accounting entry resource in the accounting system after the export
	ExternalUrl NullableString `json:"externalUrl,omitempty"`
	// Reason why the export of this item failed in the case of a failure
	FailureReason NullableString `json:"failureReason,omitempty"`
	// The classification for the failure from a list of described failure reason types
	FailureReasonType NullableString `json:"failureReasonType,omitempty"`
	// Status of the export job Item after being processed. The status of the export job item will remain null until the item an attempt has been made to process the export job item or the job is marked as failed or expired, in which case the status will then be abandoned. The status of an export job item that has been processed will either be failed or successful.
	Status string `json:"status"`
}

// NewExportJobItem instantiates a new ExportJobItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportJobItem(accountingEntryId string, exportJobId string, status string) *ExportJobItem {
	this := ExportJobItem{}
	this.AccountingEntryId = accountingEntryId
	this.ExportJobId = exportJobId
	this.Status = status
	return &this
}

// NewExportJobItemWithDefaults instantiates a new ExportJobItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportJobItemWithDefaults() *ExportJobItem {
	this := ExportJobItem{}
	return &this
}

// GetAccountingEntryId returns the AccountingEntryId field value
func (o *ExportJobItem) GetAccountingEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountingEntryId
}

// GetAccountingEntryIdOk returns a tuple with the AccountingEntryId field value
// and a boolean to check if the value has been set.
func (o *ExportJobItem) GetAccountingEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountingEntryId, true
}

// SetAccountingEntryId sets field value
func (o *ExportJobItem) SetAccountingEntryId(v string) {
	o.AccountingEntryId = v
}

// GetExportJobId returns the ExportJobId field value
func (o *ExportJobItem) GetExportJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExportJobId
}

// GetExportJobIdOk returns a tuple with the ExportJobId field value
// and a boolean to check if the value has been set.
func (o *ExportJobItem) GetExportJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExportJobId, true
}

// SetExportJobId sets field value
func (o *ExportJobItem) SetExportJobId(v string) {
	o.ExportJobId = v
}

// GetExportedAt returns the ExportedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportJobItem) GetExportedAt() time.Time {
	if o == nil || o.ExportedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.ExportedAt.Get()
}

// GetExportedAtOk returns a tuple with the ExportedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportJobItem) GetExportedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExportedAt.Get(), o.ExportedAt.IsSet()
}

// HasExportedAt returns a boolean if a field has been set.
func (o *ExportJobItem) HasExportedAt() bool {
	if o != nil && o.ExportedAt.IsSet() {
		return true
	}

	return false
}

// SetExportedAt gets a reference to the given NullableTime and assigns it to the ExportedAt field.
func (o *ExportJobItem) SetExportedAt(v time.Time) {
	o.ExportedAt.Set(&v)
}

// SetExportedAtNil sets the value for ExportedAt to be an explicit nil
func (o *ExportJobItem) SetExportedAtNil() {
	o.ExportedAt.Set(nil)
}

// UnsetExportedAt ensures that no value is present for ExportedAt, not even an explicit nil
func (o *ExportJobItem) UnsetExportedAt() {
	o.ExportedAt.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportJobItem) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportJobItem) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *ExportJobItem) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *ExportJobItem) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *ExportJobItem) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *ExportJobItem) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetExternalUrl returns the ExternalUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportJobItem) GetExternalUrl() string {
	if o == nil || o.ExternalUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalUrl.Get()
}

// GetExternalUrlOk returns a tuple with the ExternalUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportJobItem) GetExternalUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalUrl.Get(), o.ExternalUrl.IsSet()
}

// HasExternalUrl returns a boolean if a field has been set.
func (o *ExportJobItem) HasExternalUrl() bool {
	if o != nil && o.ExternalUrl.IsSet() {
		return true
	}

	return false
}

// SetExternalUrl gets a reference to the given NullableString and assigns it to the ExternalUrl field.
func (o *ExportJobItem) SetExternalUrl(v string) {
	o.ExternalUrl.Set(&v)
}

// SetExternalUrlNil sets the value for ExternalUrl to be an explicit nil
func (o *ExportJobItem) SetExternalUrlNil() {
	o.ExternalUrl.Set(nil)
}

// UnsetExternalUrl ensures that no value is present for ExternalUrl, not even an explicit nil
func (o *ExportJobItem) UnsetExternalUrl() {
	o.ExternalUrl.Unset()
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportJobItem) GetFailureReason() string {
	if o == nil || o.FailureReason.Get() == nil {
		var ret string
		return ret
	}
	return *o.FailureReason.Get()
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportJobItem) GetFailureReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureReason.Get(), o.FailureReason.IsSet()
}

// HasFailureReason returns a boolean if a field has been set.
func (o *ExportJobItem) HasFailureReason() bool {
	if o != nil && o.FailureReason.IsSet() {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given NullableString and assigns it to the FailureReason field.
func (o *ExportJobItem) SetFailureReason(v string) {
	o.FailureReason.Set(&v)
}

// SetFailureReasonNil sets the value for FailureReason to be an explicit nil
func (o *ExportJobItem) SetFailureReasonNil() {
	o.FailureReason.Set(nil)
}

// UnsetFailureReason ensures that no value is present for FailureReason, not even an explicit nil
func (o *ExportJobItem) UnsetFailureReason() {
	o.FailureReason.Unset()
}

// GetFailureReasonType returns the FailureReasonType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportJobItem) GetFailureReasonType() string {
	if o == nil || o.FailureReasonType.Get() == nil {
		var ret string
		return ret
	}
	return *o.FailureReasonType.Get()
}

// GetFailureReasonTypeOk returns a tuple with the FailureReasonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportJobItem) GetFailureReasonTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureReasonType.Get(), o.FailureReasonType.IsSet()
}

// HasFailureReasonType returns a boolean if a field has been set.
func (o *ExportJobItem) HasFailureReasonType() bool {
	if o != nil && o.FailureReasonType.IsSet() {
		return true
	}

	return false
}

// SetFailureReasonType gets a reference to the given NullableString and assigns it to the FailureReasonType field.
func (o *ExportJobItem) SetFailureReasonType(v string) {
	o.FailureReasonType.Set(&v)
}

// SetFailureReasonTypeNil sets the value for FailureReasonType to be an explicit nil
func (o *ExportJobItem) SetFailureReasonTypeNil() {
	o.FailureReasonType.Set(nil)
}

// UnsetFailureReasonType ensures that no value is present for FailureReasonType, not even an explicit nil
func (o *ExportJobItem) UnsetFailureReasonType() {
	o.FailureReasonType.Unset()
}

// GetStatus returns the Status field value
func (o *ExportJobItem) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ExportJobItem) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ExportJobItem) SetStatus(v string) {
	o.Status = v
}

func (o ExportJobItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountingEntryId"] = o.AccountingEntryId
	}
	if true {
		toSerialize["exportJobId"] = o.ExportJobId
	}
	if o.ExportedAt.IsSet() {
		toSerialize["exportedAt"] = o.ExportedAt.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.ExternalUrl.IsSet() {
		toSerialize["externalUrl"] = o.ExternalUrl.Get()
	}
	if o.FailureReason.IsSet() {
		toSerialize["failureReason"] = o.FailureReason.Get()
	}
	if o.FailureReasonType.IsSet() {
		toSerialize["failureReasonType"] = o.FailureReasonType.Get()
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableExportJobItem struct {
	value *ExportJobItem
	isSet bool
}

func (v NullableExportJobItem) Get() *ExportJobItem {
	return v.value
}

func (v *NullableExportJobItem) Set(val *ExportJobItem) {
	v.value = val
	v.isSet = true
}

func (v NullableExportJobItem) IsSet() bool {
	return v.isSet
}

func (v *NullableExportJobItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportJobItem(val *ExportJobItem) *NullableExportJobItem {
	return &NullableExportJobItem{value: val, isSet: true}
}

func (v NullableExportJobItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportJobItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
