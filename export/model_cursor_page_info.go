/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// CursorPageInfo struct for CursorPageInfo
type CursorPageInfo struct {
	CurrentRequestPagination CursorPageCurrentRequestInfo `json:"currentRequestPagination"`
	EndCursor                *string                      `json:"endCursor,omitempty"`
	HasNextPage              bool                         `json:"hasNextPage"`
	HasPreviousPage          bool                         `json:"hasPreviousPage"`
	StartCursor              *string                      `json:"startCursor,omitempty"`
	Total                    *int64                       `json:"total,omitempty"`
}

// NewCursorPageInfo instantiates a new CursorPageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPageInfo(currentRequestPagination CursorPageCurrentRequestInfo, hasNextPage bool, hasPreviousPage bool) *CursorPageInfo {
	this := CursorPageInfo{}
	this.CurrentRequestPagination = currentRequestPagination
	this.HasNextPage = hasNextPage
	this.HasPreviousPage = hasPreviousPage
	return &this
}

// NewCursorPageInfoWithDefaults instantiates a new CursorPageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPageInfoWithDefaults() *CursorPageInfo {
	this := CursorPageInfo{}
	return &this
}

// GetCurrentRequestPagination returns the CurrentRequestPagination field value
func (o *CursorPageInfo) GetCurrentRequestPagination() CursorPageCurrentRequestInfo {
	if o == nil {
		var ret CursorPageCurrentRequestInfo
		return ret
	}

	return o.CurrentRequestPagination
}

// GetCurrentRequestPaginationOk returns a tuple with the CurrentRequestPagination field value
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetCurrentRequestPaginationOk() (*CursorPageCurrentRequestInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentRequestPagination, true
}

// SetCurrentRequestPagination sets field value
func (o *CursorPageInfo) SetCurrentRequestPagination(v CursorPageCurrentRequestInfo) {
	o.CurrentRequestPagination = v
}

// GetEndCursor returns the EndCursor field value if set, zero value otherwise.
func (o *CursorPageInfo) GetEndCursor() string {
	if o == nil || o.EndCursor == nil {
		var ret string
		return ret
	}
	return *o.EndCursor
}

// GetEndCursorOk returns a tuple with the EndCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetEndCursorOk() (*string, bool) {
	if o == nil || o.EndCursor == nil {
		return nil, false
	}
	return o.EndCursor, true
}

// HasEndCursor returns a boolean if a field has been set.
func (o *CursorPageInfo) HasEndCursor() bool {
	if o != nil && o.EndCursor != nil {
		return true
	}

	return false
}

// SetEndCursor gets a reference to the given string and assigns it to the EndCursor field.
func (o *CursorPageInfo) SetEndCursor(v string) {
	o.EndCursor = &v
}

// GetHasNextPage returns the HasNextPage field value
func (o *CursorPageInfo) GetHasNextPage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasNextPage
}

// GetHasNextPageOk returns a tuple with the HasNextPage field value
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetHasNextPageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasNextPage, true
}

// SetHasNextPage sets field value
func (o *CursorPageInfo) SetHasNextPage(v bool) {
	o.HasNextPage = v
}

// GetHasPreviousPage returns the HasPreviousPage field value
func (o *CursorPageInfo) GetHasPreviousPage() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasPreviousPage
}

// GetHasPreviousPageOk returns a tuple with the HasPreviousPage field value
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetHasPreviousPageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasPreviousPage, true
}

// SetHasPreviousPage sets field value
func (o *CursorPageInfo) SetHasPreviousPage(v bool) {
	o.HasPreviousPage = v
}

// GetStartCursor returns the StartCursor field value if set, zero value otherwise.
func (o *CursorPageInfo) GetStartCursor() string {
	if o == nil || o.StartCursor == nil {
		var ret string
		return ret
	}
	return *o.StartCursor
}

// GetStartCursorOk returns a tuple with the StartCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetStartCursorOk() (*string, bool) {
	if o == nil || o.StartCursor == nil {
		return nil, false
	}
	return o.StartCursor, true
}

// HasStartCursor returns a boolean if a field has been set.
func (o *CursorPageInfo) HasStartCursor() bool {
	if o != nil && o.StartCursor != nil {
		return true
	}

	return false
}

// SetStartCursor gets a reference to the given string and assigns it to the StartCursor field.
func (o *CursorPageInfo) SetStartCursor(v string) {
	o.StartCursor = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *CursorPageInfo) GetTotal() int64 {
	if o == nil || o.Total == nil {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageInfo) GetTotalOk() (*int64, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *CursorPageInfo) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *CursorPageInfo) SetTotal(v int64) {
	o.Total = &v
}

func (o CursorPageInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currentRequestPagination"] = o.CurrentRequestPagination
	}
	if o.EndCursor != nil {
		toSerialize["endCursor"] = o.EndCursor
	}
	if true {
		toSerialize["hasNextPage"] = o.HasNextPage
	}
	if true {
		toSerialize["hasPreviousPage"] = o.HasPreviousPage
	}
	if o.StartCursor != nil {
		toSerialize["startCursor"] = o.StartCursor
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableCursorPageInfo struct {
	value *CursorPageInfo
	isSet bool
}

func (v NullableCursorPageInfo) Get() *CursorPageInfo {
	return v.value
}

func (v *NullableCursorPageInfo) Set(val *CursorPageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPageInfo(val *CursorPageInfo) *NullableCursorPageInfo {
	return &NullableCursorPageInfo{value: val, isSet: true}
}

func (v NullableCursorPageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
