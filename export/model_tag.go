/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// Tag Tags are used to appropriate funds to specific projects, cost centers, departments, etc. This is what is known as \"tags\" in Pleo.
type Tag struct {
	// This is the identifier to the specific cost allocation item. e.g. the specific project, department, etc.
	Code string `json:"code"`
	// Allocation grouping, e.g. project, cost center, department or if the if dimensions are being used, this would be the dimension group identifier.
	GroupCode string `json:"groupCode"`
}

// NewTag instantiates a new Tag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTag(code string, groupCode string) *Tag {
	this := Tag{}
	this.Code = code
	this.GroupCode = groupCode
	return &this
}

// NewTagWithDefaults instantiates a new Tag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagWithDefaults() *Tag {
	this := Tag{}
	return &this
}

// GetCode returns the Code field value
func (o *Tag) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *Tag) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *Tag) SetCode(v string) {
	o.Code = v
}

// GetGroupCode returns the GroupCode field value
func (o *Tag) GetGroupCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupCode
}

// GetGroupCodeOk returns a tuple with the GroupCode field value
// and a boolean to check if the value has been set.
func (o *Tag) GetGroupCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupCode, true
}

// SetGroupCode sets field value
func (o *Tag) SetGroupCode(v string) {
	o.GroupCode = v
}

func (o Tag) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	if true {
		toSerialize["groupCode"] = o.GroupCode
	}
	return json.Marshal(toSerialize)
}

type NullableTag struct {
	value *Tag
	isSet bool
}

func (v NullableTag) Get() *Tag {
	return v.value
}

func (v *NullableTag) Set(val *Tag) {
	v.value = val
	v.isSet = true
}

func (v NullableTag) IsSet() bool {
	return v.isSet
}

func (v *NullableTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTag(val *Tag) *NullableTag {
	return &NullableTag{value: val, isSet: true}
}

func (v NullableTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
