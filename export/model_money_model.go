/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// MoneyModel Total amount in the Pleo wallet's currency of the spend
type MoneyModel struct {
	Currency string  `json:"currency"`
	Value    float32 `json:"value"`
}

// NewMoneyModel instantiates a new MoneyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoneyModel(currency string, value float32) *MoneyModel {
	this := MoneyModel{}
	this.Currency = currency
	this.Value = value
	return &this
}

// NewMoneyModelWithDefaults instantiates a new MoneyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoneyModelWithDefaults() *MoneyModel {
	this := MoneyModel{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *MoneyModel) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *MoneyModel) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *MoneyModel) SetCurrency(v string) {
	o.Currency = v
}

// GetValue returns the Value field value
func (o *MoneyModel) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *MoneyModel) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *MoneyModel) SetValue(v float32) {
	o.Value = v
}

func (o MoneyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableMoneyModel struct {
	value *MoneyModel
	isSet bool
}

func (v NullableMoneyModel) Get() *MoneyModel {
	return v.value
}

func (v *NullableMoneyModel) Set(val *MoneyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMoneyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMoneyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoneyModel(val *MoneyModel) *NullableMoneyModel {
	return &NullableMoneyModel{value: val, isSet: true}
}

func (v NullableMoneyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoneyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
