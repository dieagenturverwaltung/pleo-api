/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// ExportItemAmount Tax amount
type ExportItemAmount struct {
	InSupplierCurrency MoneyModel `json:"inSupplierCurrency"`
	InWalletCurrency   MoneyModel `json:"inWalletCurrency"`
}

// NewExportItemAmount instantiates a new ExportItemAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportItemAmount(inSupplierCurrency MoneyModel, inWalletCurrency MoneyModel) *ExportItemAmount {
	this := ExportItemAmount{}
	this.InSupplierCurrency = inSupplierCurrency
	this.InWalletCurrency = inWalletCurrency
	return &this
}

// NewExportItemAmountWithDefaults instantiates a new ExportItemAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportItemAmountWithDefaults() *ExportItemAmount {
	this := ExportItemAmount{}
	return &this
}

// GetInSupplierCurrency returns the InSupplierCurrency field value
func (o *ExportItemAmount) GetInSupplierCurrency() MoneyModel {
	if o == nil {
		var ret MoneyModel
		return ret
	}

	return o.InSupplierCurrency
}

// GetInSupplierCurrencyOk returns a tuple with the InSupplierCurrency field value
// and a boolean to check if the value has been set.
func (o *ExportItemAmount) GetInSupplierCurrencyOk() (*MoneyModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InSupplierCurrency, true
}

// SetInSupplierCurrency sets field value
func (o *ExportItemAmount) SetInSupplierCurrency(v MoneyModel) {
	o.InSupplierCurrency = v
}

// GetInWalletCurrency returns the InWalletCurrency field value
func (o *ExportItemAmount) GetInWalletCurrency() MoneyModel {
	if o == nil {
		var ret MoneyModel
		return ret
	}

	return o.InWalletCurrency
}

// GetInWalletCurrencyOk returns a tuple with the InWalletCurrency field value
// and a boolean to check if the value has been set.
func (o *ExportItemAmount) GetInWalletCurrencyOk() (*MoneyModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InWalletCurrency, true
}

// SetInWalletCurrency sets field value
func (o *ExportItemAmount) SetInWalletCurrency(v MoneyModel) {
	o.InWalletCurrency = v
}

func (o ExportItemAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["inSupplierCurrency"] = o.InSupplierCurrency
	}
	if true {
		toSerialize["inWalletCurrency"] = o.InWalletCurrency
	}
	return json.Marshal(toSerialize)
}

type NullableExportItemAmount struct {
	value *ExportItemAmount
	isSet bool
}

func (v NullableExportItemAmount) Get() *ExportItemAmount {
	return v.value
}

func (v *NullableExportItemAmount) Set(val *ExportItemAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableExportItemAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableExportItemAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportItemAmount(val *ExportItemAmount) *NullableExportItemAmount {
	return &NullableExportItemAmount{value: val, isSet: true}
}

func (v NullableExportItemAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportItemAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
