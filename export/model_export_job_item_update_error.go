/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// ExportJobItemUpdateError If any errors occurred in updating the export job items, they will be listed here
type ExportJobItemUpdateError struct {
	// Accounting entry ID for which this error occurred
	AccountingEntryId string `json:"accountingEntryId"`
	// Descriptive error message
	Message string `json:"message"`
	// Descriptive error type
	Type string `json:"type"`
}

// NewExportJobItemUpdateError instantiates a new ExportJobItemUpdateError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportJobItemUpdateError(accountingEntryId string, message string, type_ string) *ExportJobItemUpdateError {
	this := ExportJobItemUpdateError{}
	this.AccountingEntryId = accountingEntryId
	this.Message = message
	this.Type = type_
	return &this
}

// NewExportJobItemUpdateErrorWithDefaults instantiates a new ExportJobItemUpdateError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportJobItemUpdateErrorWithDefaults() *ExportJobItemUpdateError {
	this := ExportJobItemUpdateError{}
	return &this
}

// GetAccountingEntryId returns the AccountingEntryId field value
func (o *ExportJobItemUpdateError) GetAccountingEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountingEntryId
}

// GetAccountingEntryIdOk returns a tuple with the AccountingEntryId field value
// and a boolean to check if the value has been set.
func (o *ExportJobItemUpdateError) GetAccountingEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountingEntryId, true
}

// SetAccountingEntryId sets field value
func (o *ExportJobItemUpdateError) SetAccountingEntryId(v string) {
	o.AccountingEntryId = v
}

// GetMessage returns the Message field value
func (o *ExportJobItemUpdateError) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ExportJobItemUpdateError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ExportJobItemUpdateError) SetMessage(v string) {
	o.Message = v
}

// GetType returns the Type field value
func (o *ExportJobItemUpdateError) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ExportJobItemUpdateError) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ExportJobItemUpdateError) SetType(v string) {
	o.Type = v
}

func (o ExportJobItemUpdateError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountingEntryId"] = o.AccountingEntryId
	}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableExportJobItemUpdateError struct {
	value *ExportJobItemUpdateError
	isSet bool
}

func (v NullableExportJobItemUpdateError) Get() *ExportJobItemUpdateError {
	return v.value
}

func (v *NullableExportJobItemUpdateError) Set(val *ExportJobItemUpdateError) {
	v.value = val
	v.isSet = true
}

func (v NullableExportJobItemUpdateError) IsSet() bool {
	return v.isSet
}

func (v *NullableExportJobItemUpdateError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportJobItemUpdateError(val *ExportJobItemUpdateError) *NullableExportJobItemUpdateError {
	return &NullableExportJobItemUpdateError{value: val, isSet: true}
}

func (v NullableExportJobItemUpdateError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportJobItemUpdateError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
