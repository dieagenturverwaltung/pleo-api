/*
Export API

Export OpenAPI definitions

API version: 20.0.0
Contact: apiteam@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package export

import (
	"encoding/json"
)

// CreateExportJobEvent struct for CreateExportJobEvent
type CreateExportJobEvent struct {
	Event string `json:"event"`
	// Reason why the job failed in the case of a failure
	FailureReason *string `json:"failureReason,omitempty"`
	// The classification for the failure from a list of described failure reason types
	FailureReasonType *string `json:"failureReasonType,omitempty"`
	// Identifier of the job the event is to be processed for
	JobId string `json:"jobId"`
}

// NewCreateExportJobEvent instantiates a new CreateExportJobEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExportJobEvent(event string, jobId string) *CreateExportJobEvent {
	this := CreateExportJobEvent{}
	this.Event = event
	this.JobId = jobId
	return &this
}

// NewCreateExportJobEventWithDefaults instantiates a new CreateExportJobEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExportJobEventWithDefaults() *CreateExportJobEvent {
	this := CreateExportJobEvent{}
	return &this
}

// GetEvent returns the Event field value
func (o *CreateExportJobEvent) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *CreateExportJobEvent) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *CreateExportJobEvent) SetEvent(v string) {
	o.Event = v
}

// GetFailureReason returns the FailureReason field value if set, zero value otherwise.
func (o *CreateExportJobEvent) GetFailureReason() string {
	if o == nil || o.FailureReason == nil {
		var ret string
		return ret
	}
	return *o.FailureReason
}

// GetFailureReasonOk returns a tuple with the FailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExportJobEvent) GetFailureReasonOk() (*string, bool) {
	if o == nil || o.FailureReason == nil {
		return nil, false
	}
	return o.FailureReason, true
}

// HasFailureReason returns a boolean if a field has been set.
func (o *CreateExportJobEvent) HasFailureReason() bool {
	if o != nil && o.FailureReason != nil {
		return true
	}

	return false
}

// SetFailureReason gets a reference to the given string and assigns it to the FailureReason field.
func (o *CreateExportJobEvent) SetFailureReason(v string) {
	o.FailureReason = &v
}

// GetFailureReasonType returns the FailureReasonType field value if set, zero value otherwise.
func (o *CreateExportJobEvent) GetFailureReasonType() string {
	if o == nil || o.FailureReasonType == nil {
		var ret string
		return ret
	}
	return *o.FailureReasonType
}

// GetFailureReasonTypeOk returns a tuple with the FailureReasonType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExportJobEvent) GetFailureReasonTypeOk() (*string, bool) {
	if o == nil || o.FailureReasonType == nil {
		return nil, false
	}
	return o.FailureReasonType, true
}

// HasFailureReasonType returns a boolean if a field has been set.
func (o *CreateExportJobEvent) HasFailureReasonType() bool {
	if o != nil && o.FailureReasonType != nil {
		return true
	}

	return false
}

// SetFailureReasonType gets a reference to the given string and assigns it to the FailureReasonType field.
func (o *CreateExportJobEvent) SetFailureReasonType(v string) {
	o.FailureReasonType = &v
}

// GetJobId returns the JobId field value
func (o *CreateExportJobEvent) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *CreateExportJobEvent) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *CreateExportJobEvent) SetJobId(v string) {
	o.JobId = v
}

func (o CreateExportJobEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event"] = o.Event
	}
	if o.FailureReason != nil {
		toSerialize["failureReason"] = o.FailureReason
	}
	if o.FailureReasonType != nil {
		toSerialize["failureReasonType"] = o.FailureReasonType
	}
	if true {
		toSerialize["jobId"] = o.JobId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateExportJobEvent struct {
	value *CreateExportJobEvent
	isSet bool
}

func (v NullableCreateExportJobEvent) Get() *CreateExportJobEvent {
	return v.value
}

func (v *NullableCreateExportJobEvent) Set(val *CreateExportJobEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExportJobEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExportJobEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExportJobEvent(val *CreateExportJobEvent) *NullableCreateExportJobEvent {
	return &NullableCreateExportJobEvent{value: val, isSet: true}
}

func (v NullableCreateExportJobEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExportJobEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
