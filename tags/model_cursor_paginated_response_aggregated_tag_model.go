/*
Tags API

Tags OpenAPI definitions

API version: 31.38.0
Contact: team-expense-core@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tags

import (
	"encoding/json"
)

// CursorPaginatedResponseAggregatedTagModel struct for CursorPaginatedResponseAggregatedTagModel
type CursorPaginatedResponseAggregatedTagModel struct {
	Data       []AggregatedTagModel `json:"data"`
	Pagination CursorPageInfo       `json:"pagination"`
}

// NewCursorPaginatedResponseAggregatedTagModel instantiates a new CursorPaginatedResponseAggregatedTagModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPaginatedResponseAggregatedTagModel(data []AggregatedTagModel, pagination CursorPageInfo) *CursorPaginatedResponseAggregatedTagModel {
	this := CursorPaginatedResponseAggregatedTagModel{}
	this.Data = data
	this.Pagination = pagination
	return &this
}

// NewCursorPaginatedResponseAggregatedTagModelWithDefaults instantiates a new CursorPaginatedResponseAggregatedTagModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPaginatedResponseAggregatedTagModelWithDefaults() *CursorPaginatedResponseAggregatedTagModel {
	this := CursorPaginatedResponseAggregatedTagModel{}
	return &this
}

// GetData returns the Data field value
func (o *CursorPaginatedResponseAggregatedTagModel) GetData() []AggregatedTagModel {
	if o == nil {
		var ret []AggregatedTagModel
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *CursorPaginatedResponseAggregatedTagModel) GetDataOk() ([]AggregatedTagModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *CursorPaginatedResponseAggregatedTagModel) SetData(v []AggregatedTagModel) {
	o.Data = v
}

// GetPagination returns the Pagination field value
func (o *CursorPaginatedResponseAggregatedTagModel) GetPagination() CursorPageInfo {
	if o == nil {
		var ret CursorPageInfo
		return ret
	}

	return o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value
// and a boolean to check if the value has been set.
func (o *CursorPaginatedResponseAggregatedTagModel) GetPaginationOk() (*CursorPageInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pagination, true
}

// SetPagination sets field value
func (o *CursorPaginatedResponseAggregatedTagModel) SetPagination(v CursorPageInfo) {
	o.Pagination = v
}

func (o CursorPaginatedResponseAggregatedTagModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableCursorPaginatedResponseAggregatedTagModel struct {
	value *CursorPaginatedResponseAggregatedTagModel
	isSet bool
}

func (v NullableCursorPaginatedResponseAggregatedTagModel) Get() *CursorPaginatedResponseAggregatedTagModel {
	return v.value
}

func (v *NullableCursorPaginatedResponseAggregatedTagModel) Set(val *CursorPaginatedResponseAggregatedTagModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPaginatedResponseAggregatedTagModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPaginatedResponseAggregatedTagModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPaginatedResponseAggregatedTagModel(val *CursorPaginatedResponseAggregatedTagModel) *NullableCursorPaginatedResponseAggregatedTagModel {
	return &NullableCursorPaginatedResponseAggregatedTagModel{value: val, isSet: true}
}

func (v NullableCursorPaginatedResponseAggregatedTagModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPaginatedResponseAggregatedTagModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
