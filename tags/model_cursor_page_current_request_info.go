/*
Tags API

Tags OpenAPI definitions

API version: 31.38.0
Contact: team-expense-core@pleo.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tags

import (
	"encoding/json"
)

// CursorPageCurrentRequestInfo struct for CursorPageCurrentRequestInfo
type CursorPageCurrentRequestInfo struct {
	After        *string             `json:"after,omitempty"`
	Before       *string             `json:"before,omitempty"`
	Limit        *int32              `json:"limit,omitempty"`
	Offset       *int64              `json:"offset,omitempty"`
	Parameters   map[string][]string `json:"parameters"`
	SortingKeys  []string            `json:"sortingKeys,omitempty"`
	SortingOrder []PageOrder         `json:"sortingOrder,omitempty"`
}

// NewCursorPageCurrentRequestInfo instantiates a new CursorPageCurrentRequestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCursorPageCurrentRequestInfo(parameters map[string][]string) *CursorPageCurrentRequestInfo {
	this := CursorPageCurrentRequestInfo{}
	this.Parameters = parameters
	return &this
}

// NewCursorPageCurrentRequestInfoWithDefaults instantiates a new CursorPageCurrentRequestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCursorPageCurrentRequestInfoWithDefaults() *CursorPageCurrentRequestInfo {
	this := CursorPageCurrentRequestInfo{}
	return &this
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetAfter() string {
	if o == nil || o.After == nil {
		var ret string
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetAfterOk() (*string, bool) {
	if o == nil || o.After == nil {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasAfter() bool {
	if o != nil && o.After != nil {
		return true
	}

	return false
}

// SetAfter gets a reference to the given string and assigns it to the After field.
func (o *CursorPageCurrentRequestInfo) SetAfter(v string) {
	o.After = &v
}

// GetBefore returns the Before field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetBefore() string {
	if o == nil || o.Before == nil {
		var ret string
		return ret
	}
	return *o.Before
}

// GetBeforeOk returns a tuple with the Before field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetBeforeOk() (*string, bool) {
	if o == nil || o.Before == nil {
		return nil, false
	}
	return o.Before, true
}

// HasBefore returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasBefore() bool {
	if o != nil && o.Before != nil {
		return true
	}

	return false
}

// SetBefore gets a reference to the given string and assigns it to the Before field.
func (o *CursorPageCurrentRequestInfo) SetBefore(v string) {
	o.Before = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetLimit() int32 {
	if o == nil || o.Limit == nil {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetLimitOk() (*int32, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *CursorPageCurrentRequestInfo) SetLimit(v int32) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetOffset() int64 {
	if o == nil || o.Offset == nil {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetOffsetOk() (*int64, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *CursorPageCurrentRequestInfo) SetOffset(v int64) {
	o.Offset = &v
}

// GetParameters returns the Parameters field value
func (o *CursorPageCurrentRequestInfo) GetParameters() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetParametersOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parameters, true
}

// SetParameters sets field value
func (o *CursorPageCurrentRequestInfo) SetParameters(v map[string][]string) {
	o.Parameters = v
}

// GetSortingKeys returns the SortingKeys field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetSortingKeys() []string {
	if o == nil || o.SortingKeys == nil {
		var ret []string
		return ret
	}
	return o.SortingKeys
}

// GetSortingKeysOk returns a tuple with the SortingKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetSortingKeysOk() ([]string, bool) {
	if o == nil || o.SortingKeys == nil {
		return nil, false
	}
	return o.SortingKeys, true
}

// HasSortingKeys returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasSortingKeys() bool {
	if o != nil && o.SortingKeys != nil {
		return true
	}

	return false
}

// SetSortingKeys gets a reference to the given []string and assigns it to the SortingKeys field.
func (o *CursorPageCurrentRequestInfo) SetSortingKeys(v []string) {
	o.SortingKeys = v
}

// GetSortingOrder returns the SortingOrder field value if set, zero value otherwise.
func (o *CursorPageCurrentRequestInfo) GetSortingOrder() []PageOrder {
	if o == nil || o.SortingOrder == nil {
		var ret []PageOrder
		return ret
	}
	return o.SortingOrder
}

// GetSortingOrderOk returns a tuple with the SortingOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CursorPageCurrentRequestInfo) GetSortingOrderOk() ([]PageOrder, bool) {
	if o == nil || o.SortingOrder == nil {
		return nil, false
	}
	return o.SortingOrder, true
}

// HasSortingOrder returns a boolean if a field has been set.
func (o *CursorPageCurrentRequestInfo) HasSortingOrder() bool {
	if o != nil && o.SortingOrder != nil {
		return true
	}

	return false
}

// SetSortingOrder gets a reference to the given []PageOrder and assigns it to the SortingOrder field.
func (o *CursorPageCurrentRequestInfo) SetSortingOrder(v []PageOrder) {
	o.SortingOrder = v
}

func (o CursorPageCurrentRequestInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.After != nil {
		toSerialize["after"] = o.After
	}
	if o.Before != nil {
		toSerialize["before"] = o.Before
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if true {
		toSerialize["parameters"] = o.Parameters
	}
	if o.SortingKeys != nil {
		toSerialize["sortingKeys"] = o.SortingKeys
	}
	if o.SortingOrder != nil {
		toSerialize["sortingOrder"] = o.SortingOrder
	}
	return json.Marshal(toSerialize)
}

type NullableCursorPageCurrentRequestInfo struct {
	value *CursorPageCurrentRequestInfo
	isSet bool
}

func (v NullableCursorPageCurrentRequestInfo) Get() *CursorPageCurrentRequestInfo {
	return v.value
}

func (v *NullableCursorPageCurrentRequestInfo) Set(val *CursorPageCurrentRequestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableCursorPageCurrentRequestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableCursorPageCurrentRequestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCursorPageCurrentRequestInfo(val *CursorPageCurrentRequestInfo) *NullableCursorPageCurrentRequestInfo {
	return &NullableCursorPageCurrentRequestInfo{value: val, isSet: true}
}

func (v NullableCursorPageCurrentRequestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCursorPageCurrentRequestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
